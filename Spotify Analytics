# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I analyzed the data using the following SQL.

#Shows the top 10 artists by popularity and the average popularity of their songs.
SELECT artist_name, AVG(popularity) as avg_popularity
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY avg_popularity desc
LIMIT 10;

#Shows the shortest song and its artist.
SELECT artist_name, track_name
FROM BIT_DB.Spotifydata
ORDER BY duration_ms asc
LIMIT 1;

#Shows the average danceability of the 10 least popular songs.
SELECT AVG(danceability)
FROM BIT_DB.Spotifydata
WHERE popularity IN
(SELECT popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity asc
LIMIT 10);

#Shows the 10 least popular artists and the average energy of their songs.
SELECT artist_name, AVG(energy)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY AVG(popularity) asc
LIMIT 10;
